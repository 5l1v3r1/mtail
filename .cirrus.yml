# Based on the cirrus example.
container:
  image: golang:latest

test_task:
  modules_cache:
    populate_script: make --debug install_deps
    fingerprint_script: cat go.sum
    folder: $GOPATH/pkg/mod
  build_script: make --debug all
  test_script: make --debug junit-regtest
  always:
    junit_result_artifacts:
      path: "**/test-results/**/*.xml"
      format: junit
      type: text/xml

  fuzzing_task:
    depends_on:
      - test
    env:
      matrix:
        - TYPE: fuzzing
        - TYPE: local-regresson
    container:
      image: gcr.io/fuzzit-public/buster-golang12:2dc7875
    modules_cache:
      populate_script: |
        make GO111MODULE=off --debug install_deps
        GO111MODULE=on go mod vendor
      fingerprint_script: cat go.sum
      folder: $GOPATH/pkg/mod
    setup_script: |
      wget -q -O fuzzit https://github.com/fuzzitdev/fuzzit/releases/latest/download/fuzzit_Linux_x86_64
      chmod a+x fuzzit
    build_script: make GO111MODULE=off CXX=clang CXXFLAGS=-fsanitize=fuzzer LIB_FUZZING_ENGINE= --debug ./vm-fuzzer
    test_script: ./fuzzit create job --type=${TYPE} --branch=${CIRRUS_BRANCH} --revision=${CIRRUS_CHANGE_IN_REPO} mtail/internal-v ./vm-fuzzer
