---
# common-build names an anchor which contains all the reusable build
# instructions.
common-build: &common-build
  working_directory: /go/src/github.com/google/mtail
  environment:
    TEST_RESULTS: /tmp/test-results
  steps:
    - checkout
    - run: mkdir -p $TEST_RESULTS
    - run: go get github.com/jstemmer/go-junit-report
    - run: make vm/parser.go
    - run: make install_coverage_deps
    - run:
        name: Run tests with race detector
        command: |
          trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
          make testrace | tee ${TEST_RESULTS}/go-test.out
    - run:
        name: Run tests with coverage
        command: |
          make gover.coverprofile
          mkdir -p workspace
          cp gover.coverprofile workspace/${CIRCLE_JOB}.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
          - "*.coverprofile"
    - run: make regtest
    - run: make bench
    - store_test_results:
        path: /tmp/test-results

# go* names anchors which define the Go versions to build with, merging the
# common-build alias above.
go1_10: &go1_10
  <<: *common-build
  docker:
    - image: circleci/golang:1.10
go1_9: &go1_9
  <<: *common-build
  docker:
    - image: circleci/golang:1.9
go1_8: &go1_8
  <<: *common-build
  docker:
    - image: circleci/golang:1.8

# concurrency* names anchors which define the the concurrency level to run
# tests with.
concurrency_4: &concurrency_4
  environment:
    GOMAXPROCS: 4
concurrency_2: &concurrency_2
  environment:
    GOMAXPROCS: 2
concurrency_1: &concurrency_1
  environment:
    GOMAXPROCS: 1

# The main circle-ci configuration.
version: 2
jobs:
  # The main build steps are the crossproduct of concurrency and go versions.
  build-go1.10-4:
    <<: [*go1_10, *concurrency_4]
  build-go1.10-2:
    <<: [*go1_10, *concurrency_2]
  build-go1.10-1:
    <<: [*go1_10, *concurrency_1]
  build-go1.9-4:
    <<: [*go1_9, *concurrency_4]
  build-go1.9-2:
    <<: [*go1_9, *concurrency_2]
  build-go1.9-1:
    <<: [*go1_9, *concurrency_1]
  build-go1.8-4:
    <<: [*go1_8, *concurrency_4]
  build-go1.8-2:
    <<: [*go1_8, *concurrency_2]
  build-go1.8-1:
    <<: [*go1_8, *concurrency_1]

  # Coverage collects all the coverage reports from each build and merges them,
  # before sending off to Coveralls.
  coverage:
    working_directory: /go/src/github.com/google/mtail
    environment:
      COVERALLS_TOKEN: AQTCw3bl6FDphbQcMMkgVZBIunz5r3H8b
    docker:
      - image: circleci/golang:1.10
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: make install_coverage_deps
      - run:
          name: Generate coverage
          command: |
            gover /tmp/workspace
            go tool cover -html=gover.coverprofile -o coverage.html
            goveralls -coverprofile=gover.coverprofile -service=circle-ci
      - store_artifacts:
          path: gover.coverprofile
          destination: coverage
      - store_artifacts:
          path: coverage.html
          destination: coverage

  delivery:
    working_directory: /go/src/github.com/google/mtail
    docker:
      - image: circleci/golang:1.10
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: make vm/parser.go
      - run: make crossbuild
      - run: sha1sum build/*
      - store_artifacts:
          path: build/
      - run:
          name: Upload binaries to GitHub Release
          # GITHUB_TOKEN is a secret from the CircleCI environment
          command: |
            go get github.com/tcnksm/ghr
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace ${CIRCLE_TAG?} build/

tag-filter: &tag-filter
  filters:
    tags:
      only: /^v.*/

# Using workflows to sequence each of our builds in parallel, and coverage
# depending on all of them.  These two lists need to be updated when the inputs
# of the build matrix change.
workflows:
  version: 2
  build:
    jobs:
      - build-go1.10-4:
          <<: *tag-filter
      - build-go1.10-2:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.10-1:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.9-4:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.9-2:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.9-1:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.8-4:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.8-2:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - build-go1.8-1:
          <<: *tag-filter
          requires:
            - build-go1.10-4
      - coverage:
          <<: *tag-filter
          requires:
            - build-go1.10-4
            - build-go1.10-2
            - build-go1.10-1
            - build-go1.9-4
            - build-go1.9-2
            - build-go1.9-1
            - build-go1.8-4
            - build-go1.8-2
            - build-go1.8-1
      - delivery:
          requires:
            - coverage
          filters:
            tags:
              only: /^v.*/
            # Explicitly disable all branches, otherwise we match on every
            # commit.
            branches:
              ignore: /.*/
