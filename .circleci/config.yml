---
# common-build names an anchor which contains all the reusable build
# instructions.
common-build: &common-build
  working_directory: /go/src/github.com/google/mtail
  steps:
    - checkout
    - run: make --debug smoke
    - run: mkdir -p test-results
    - run: mkdir -p workspace
    - run: go get gotest.tools/gotestsum
    - run:
        name: Run tests and coverage with race detector
        command: gotestsum --junitfile test-results/test-output.xml -- -race -coverprofile=workspace/${CIRCLE_JOB}.coverprofile --covermode=atomic -tags=integration -v -timeout=20m  ./...
    - persist_to_workspace:
        root: workspace
        paths:
          - "*.coverprofile"
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: test-results

# go* names anchors which define the Go versions to build with, merging the
# common-build alias above.
go1_11: &go1_11
  <<: *common-build
  docker:
    - image: circleci/golang:1.11
go1_10: &go1_10
  <<: *common-build
  docker:
    - image: circleci/golang:1.10

# concurrency* names anchors which define the the concurrency level to run
# tests with.
concurrency_4: &concurrency_4
  environment:
    GOMAXPROCS: 4
concurrency_2: &concurrency_2
  environment:
    GOMAXPROCS: 2
concurrency_1: &concurrency_1
  environment:
    GOMAXPROCS: 1

# The main circle-ci configuration.
version: 2
jobs:
  # The main build steps are the crossproduct of concurrency and go versions.
  build-go1.11-4:
    <<: [*go1_11, *concurrency_4]
  build-go1.11-2:
    <<: [*go1_11, *concurrency_2]
  build-go1.11-1:
    <<: [*go1_11, *concurrency_1]
  build-go1.10-4:
    <<: [*go1_10, *concurrency_4]
  build-go1.10-2:
    <<: [*go1_10, *concurrency_2]
  build-go1.10-1:
    <<: [*go1_10, *concurrency_1]

  # Coverage collects all the coverage reports from each build and merges them,
  # before sending off to Coveralls.
  coverage:
    working_directory: /go/src/github.com/google/mtail
    environment:
      COVERALLS_TOKEN: AQTCw3bl6FDphbQcMMkgVZBIunz5r3H8b
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Generate coverage
          command: |
            ls -lR /tmp/workspace
            go get github.com/sozorogami/gover
            gover /tmp/workspace coverprofile
            make --debug coverage.html upload_to_coveralls
      - store_artifacts:
          path: coverprofile
          destination: coverage
      - store_artifacts:
          path: coverage.html
          destination: coverage

  delivery:
    working_directory: /go/src/github.com/google/mtail
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: make --debug crossbuild
      - run: sha1sum build/*
      - store_artifacts:
          path: build/
      - run:
          name: Upload binaries to GitHub Release
          # GITHUB_TOKEN is a secret from the CircleCI environment
          command: |
            go get github.com/tcnksm/ghr
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace ${CIRCLE_TAG?} build/

tag-filter: &tag-filter
  filters:
    tags:
      only: /^v.*/

# Using workflows to sequence each of our builds in parallel, and coverage
# depending on all of them.  These two lists need to be updated when the inputs
# of the build matrix change.
workflows:
  version: 2
  build_and_deliver:
    jobs:
      - build-go1.11-4:
          <<: *tag-filter
      - build-go1.11-2:
          <<: *tag-filter
          requires:
            - build-go1.11-4
      - build-go1.11-1:
          <<: *tag-filter
          requires:
            - build-go1.11-4
      - build-go1.10-4:
          <<: *tag-filter
          requires:
            - build-go1.11-4
      - build-go1.10-2:
          <<: *tag-filter
          requires:
            - build-go1.11-4
      - build-go1.10-1:
          <<: *tag-filter
          requires:
            - build-go1.11-4
      - coverage:
          <<: *tag-filter
          requires:
            - build-go1.11-4
            - build-go1.11-2
            - build-go1.11-1
            - build-go1.10-4
            - build-go1.10-2
            - build-go1.10-1
      - delivery:
          requires:
            - coverage
          filters:
            tags:
              only: /^v.*/
            # Explicitly disable all branches, otherwise we match on every
            # commit.
            branches:
              ignore: /.*/
